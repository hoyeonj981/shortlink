name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # SonarCloud를 위한 git 전체 히스토리 필요

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      # Gradle 캐시 저장
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      # Checkstyle 검사
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest

      # SonarCloud 분석
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_HOST: ${{ secrets.SONAR_HOST }}
        run: ./gradlew sonar \
                -DSONAR_PROJECT_KEY=SONAR_PROJECT_KEY \
                -DSONAR_ORGANIZATION=SONAR_ORGANIZATION \
                -DSONAR_HOST=SONAR_HOST \
                -DSONAR_LOGIN=SONAR_TOKEN

      # 빌드 결과물 저장
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/libs