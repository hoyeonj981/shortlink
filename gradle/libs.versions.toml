[versions]
springBoot = "3.4.1"
springBootDependencyManagement = "1.1.7"
asciidoctor = "3.3.2"
sonarqube = "6.0.1.5171"
javaJwt = "4.5.0"
querydsl = "5.1.0"
mockwebserver = "4.12.0"
geoip2 = "4.3.1"
h2 = "latest.release"

[libraries]
# Spring Boot
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "springBoot" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "springBoot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }

# Spring Security & Docs
spring-restdocs-mockmvc = { module = "org.springframework.restdocs:spring-restdocs-mockmvc" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }

# Auth
java-jwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }

# Lombok
lombok = { module = "org.projectlombok:lombok" }

# Database
h2 = { module = "com.h2database:h2", version.ref = "h2" }

# Testing
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }

# QueryDSL
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api" }

# GeoIP
geoip2 = { module = "com.maxmind.geoip2:geoip2", version.ref = "geoip2" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springBootDependencyManagement" }
asciidoctor-jvm = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }